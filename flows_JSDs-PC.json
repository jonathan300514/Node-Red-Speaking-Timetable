[{"id":"19ffebdd.dd58c4","type":"tab","label":"Heaton-Lodge","disabled":false,"info":""},{"id":"666c0cdc.28ef44","type":"mqtt-broker","z":"","broker":"127.0.0.1","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","willTopic":"","willQos":"0","willRetain":"false","willPayload":""},{"id":"c242ad7b.e0a8a","type":"websocket-listener","z":"","path":"/ws/HLJ","wholemsg":"false"},{"id":"a349c32.fdcf94","type":"mqtt-broker","z":"","broker":"127.0.0.1","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","willTopic":"","willQos":"0","willRetain":"false","willPayload":""},{"id":"ac8a2dfd.919d","type":"websocket-listener","z":"","path":"/ws/fpa","wholemsg":"false"},{"id":"49301fda.f4a89","type":"mqtt in","z":"19ffebdd.dd58c4","name":"","topic":"rocrail/service/info","qos":"1","datatype":"auto","broker":"666c0cdc.28ef44","x":110,"y":160,"wires":[["63a7ca51.127c94"]]},{"id":"5e392fab.39781","type":"debug","z":"19ffebdd.dd58c4","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":793,"y":79,"wires":[]},{"id":"15a5d206.442dee","type":"function","z":"19ffebdd.dd58c4","name":"HLJ","func":"/* Hier können Variablen definert werden \nVariables can be defined here */\n\n/* Station (same as in Rocrail defined \"area\")\nBahnhof (die selber Bezeichnung, wie in Rocrail unter Ortschaften definiert) */\nvar station = \"HLJ\";\n\n/* Value for content in schedule textfield \"yes\" or \"no\"\nVariable für Inhalt im Textfeld beim Fahrplan  \"yes\" oder \"no\" */\nvar FPtext = \"no\";\n/* Text in case of train cancelled\nText der angezeigt wird, wenn Zug ausfällt */\nvar cancel = \"Cancelled\";\n\n\n/* Text that is displayed in case of delay\nText der angezeigt wird bei Verspätung */\nvar delayminute = \" Minute verspätet!\";\nvar delayminutes = \" Minuten verspätet!\";\n\n/* Maximum number of timetables in the Display\nMaximale Anzahl an Fahrplänen im Display */\nvar maxFP = \"10\";\n\n/* If you want marquee as Fault Display set run to \"yes\"\nWenn man Laufschrift als Störung im Dispaly haben möchte run aud \"yes\" setzen*/\nvar run = \"yes\";\n\n/* Do not change ! */\ncancel = flow.set(\"cancel\",cancel);\nstation = flow.set(\"station\",station);\ndelayminute = flow.set(\"delayminute\",delayminute);\ndelayminutes = flow.set(\"delayminutes\",delayminutes);\nmaxFP = flow.set(\"maxFP\",maxFP);\nFPtext = flow.set(\"FPtext\",FPtext);\nvar stationRR = \"\";\nstationRR = flow.set(\"stationRR\",stationRR);\nmotime = 0;\n\nvar jObj = msg.payload;\nvar tag = Object.keys(jObj)[0];\n\n/* Fault */\nif( tag == \"tx\" ) {\n    var fault = jObj.tx.$.id;\n    if( fault == \"fault\") {\n        var fault = jObj.tx.$.text;\n        styleon = \"<div class=\\\"run\\\"><span class=\\\"fault2\\\">\";\n        styleoff = \"<span class=\\\"fault1\\\">\";\n        styleend = \"</span>\";\n        styleendoff = \"</span></div>\";\n        if(fault.length > 0) {\n            if( run === \"no\") {\n                msg.payload = ( { fault: styleoff + fault + styleend } );\n            }\n            if(run === \"yes\") {\n                msg.payload = ( { fault: styleon + fault + styleendoff } );\n            }\n        } else {\n            msg.payload = ( { fault: styleoff + fault + styleend } );\n        }\n        return msg;\n    }\n    }\n\n/* Clock */\nif( tag == \"clock\") {\n    var divider = jObj.clock.$.divider;\n    divider = flow.set(\"divider\",divider);\n    mtime = jObj.clock.$.time * 1000;\n    mtime = new Date(mtime),\n    mhour = mtime.getHours();\n    mminutes = mtime.getMinutes();\n    mseconds = mtime.getSeconds();\n    mtime = mhour * 60 + mminutes * 1;\n    mtime = flow.set(\"mtime\",mtime);\n    if( mminutes < 10 ) {\n        var mminutes = \"0\" + mminutes;\n    }\n    if( mhour < 10 ) {\n        var mhour = \"0\" + mhour;\n    }\n     if( mseconds < 10 ) {\n        var mseconds = \"0\" + mseconds;\n    }\n    \n    var time = mhour + \":\" + mminutes + \":\" + mseconds;\n    msg.payload = ( { \"time\": time } );\n    return msg;\n}\n\n/* Scheduletable */\nif( tag == \"scheduletable\" ) {\n    var stationRR = jObj.scheduletable.$.id;\n    stationRR = flow.set(\"stationRR\",stationRR);\n    }\nstationRR = flow.get(\"stationRR\") || \"\";\nstation = flow.get(\"station\") || \"\";\nif( tag == \"scheduletable\" && station == stationRR ) {\n    var i = 0;\n    if ( typeof(jObj.scheduletable.scheduletableentry) === \"undefined\" ) {\n        FPlength = 0\n    } else {\n        FPlength = jObj.scheduletable.scheduletableentry.length;\n    }\n    var list = new Array(\"list\");\n    //var motime = flow.get(\"mtime\") || \"\";\n    //motime = motime * 1;\n    var FPhour = jObj.scheduletable.$.hour;\n    FPhour = FPhour * 60;\n    var FPminute = jObj.scheduletable.$.minute;\n    motime = FPhour * 1 + FPminute * 1;\n    var maxFP = flow.get(\"maxFP\",maxFP) || \"\";\n    maxFP = maxFP * 1 - 1;\n    /* Anzeiger mit leeren Zeilen auffüllen */\n    while( i <= maxFP ) {\n        list[i] = ( { point: \" \" , ptime: \" \" , atime: \" \" , train: \" \" , via: \" \" , des: \" \" , track: \" \" , notice: \" \" , delay: \" \" , cancel: \" \" , remark: \" \" } );\n        i++;\n    }\n    var i = 0;\n    /* Fahrplaneinträge in Anzeige schreiben */\n    if( FPlength <= maxFP ) {\n        maxFP = FPlength - 1;\n    }\n        while( i <= maxFP ) {\n            /* Pruefen auf Ankunft */\n            var bkdes = jObj.scheduletable.scheduletableentry[i].$.bkid;\n            var lcbkid = jObj.scheduletable.scheduletableentry[i].$.lcbkid;\n            if( typeof(lcbkid) === \"undefined\" ) { // Pruefen auf Inhalt\n                var point = '';\n            } else {\n                if( lcbkid == bkdes ) {\n                    var point = '*';\n                } else {\n                    var point = '';\n                    }\n            }\n            /* geplante Abfahrtzeit setzen */\n            var hour = jObj.scheduletable.scheduletableentry[i].$.hour;\n            if( hour < 10 ) {\n                var hour = \"0\" + hour;\n            }\n            var min = jObj.scheduletable.scheduletableentry[i].$.minute;\n            if( min < 10 ) {\n                var min = \"0\" + min;\n            }\n            var ptime = hour + \":\" + min;\n            /* Zugnummer */\n            train = jObj.scheduletable.scheduletableentry[i].$.trainid;\n            if( typeof(train) === \"undefined\" ) { // Pruefen auf Inhalt            \n                train = \"Train undefined \";\n            }\n            /* Gleis */\n            track = jObj.scheduletable.scheduletableentry[i].$.platform;\n            if( typeof(track) === \"undefined\" ) { // Pruefen auf Inhalt \n                track = \"Track undefined \";\n            }\n            /* Bemerkungen */\n            remark = jObj.scheduletable.scheduletableentry[i].$.remark;\n            if( typeof(remark) === \"undefined\" ) { // Pruefen auf Inhalt \n                remark = \" \";\n            }\n            /* Prüfen ob Variable FPtext yes oder no */\n            FPtext = flow.get(\"FPtext\",FPtext) || \"\";\n            /* Inhalt Textfeld Fahrplan splitten */\n            split = jObj.scheduletable.scheduletableentry[i].$.via;\n            if(FPtext === \"no\") {\n                /* Inhalt Textfeld Fahrplan splitten */\n                if( typeof(split) === \"undefined\" ) { // Pruefen auf Inhalt\n                    split = \"via undefined\";\n                }\n                var split = split.split(\",\");\n                /* Ziel */\n                var des = split[0];\n                /* via */\n                if( typeof(split[1]) === \"undefined\" ) { // Pruefen auf Inhalt            \n                    var via = \" \";\n                }\n                else {\n                    var via = split[1];\n                }            \n                /* Hinweis */\n                if( typeof(split[2]) === \"undefined\" ) { // Pruefen auf Inhalt\n                    var notice = \" \";\n                }\n                else {\n                    var notice = split[2];\n                }\n            }\n            if( FPtext === \"yes\") {\n                var split = split.split(\",\");\n                var splitlength = split.length;\n                via = split[0];\n                for(l = 1; l < splitlength; l++) {\n                via +=  \" - \" + split[l];\n                }\n                des = \"\";\n                notice = \"\";\n            }\n            /* Pruefen auf Verspaetung */\n            var delay = 0;\n            var atime = \"\";\n            var delay = jObj.scheduletable.scheduletableentry[i].$.delay;\n            if( typeof(delay) === \"undefined\") { //Pruefen auf Inhalt\n                var delay = \"\";\n                var atime = \"\";\n            } else {\n                if ( delay == 0 ) {\n                var delay = \"\";\n                var atime = \"\";   \n                }\n                if( delay > 0 ) {\n                    /* Aktuelle Abfahrtzeit ermitteln */\n                    var hourdelay = hour * 1;\n                    var mindelay = min * 1 + delay * 1;\n                    if( mindelay > 59 ) {\n                        hourdelay = Math.floor( mindelay * 1 / 60 );\n                        mindelay = mindelay - ( hourdelay * 60 );\n                        hourdelay = hour * 1 + hourdelay * 1;\n                        if( hourdelay > 23 ) {\n                            hourdelay = hourdelay * 1 - 23;\n                        }\n                    }\n                    mindelay = mindelay * 1;\n                    hourdelay = hourdelay * 1;\n                    if( mindelay < 10 ) {\n                        var mindelay = \"0\" + mindelay;\n                    }\n                    if( hourdelay < 10 ) {\n                        var hourdelay = \"0\" + hourdelay;\n                    }\n                    var atime = hourdelay + \":\" + mindelay;\n                    var delayminute = flow.get(\"delayminute\",delayminute) || \"\";\n                    var delayminutes = flow.get(\"delayminutes\",delayminutes) || \"\";\n                    if( delay == 1 ) {\n                        delay = delay + delayminute;   \n                    }\n                    if( delay > 1 ){\n                        delay = delay + delayminutes;\n                    }\n                    if( delay == 0 ) {\n                        delay = \"\";\n                    }\n                }\n            }\n            /* Prüfen auf Ausfall */\n            var starthour = jObj.scheduletable.scheduletableentry[i].$.starthour;\n            var startminute = jObj.scheduletable.scheduletableentry[i].$.startminute;\n            var timeproc = jObj.scheduletable.scheduletableentry[i].$.timeprocessing;\n            timeproc = timeproc * 1;\n            var timeframe = jObj.scheduletable.scheduletableentry[i].$.timeframe;\n            timeframe = timeframe * 1;\n            var startFP = starthour * 60 + startminute * 1;\n            var lcid = jObj.scheduletable.scheduletableentry[i].$.lcid;\n            var maxdelay = jObj.scheduletable.scheduletableentry[i].$.maxdelay;\n            var cancel = \"\";\n            /* stündliche FP */\n            if( timeproc == 2 ) {\n                maxdelay = startFP * 1 + timeframe * 1;\n                if( motime > 1380 && maxdelay < 59 ) {\n                    maxdelay = 24 * 60 + maxdelay * 1;\n                }\n                if( typeof(lcid) === \"undefined\" || lcid === \"\" ) {\n                    if( maxdelay < motime ) {\n                        var cancel = flow.get(\"cancel\",cancel) || \"\";\n                    }\n                }\n            }\n            /* absolute FP */\n            if( timeproc == 0 ) {\n                var divider = flow.get(\"divider\",divider);\n                maxdelay = maxdelay * 1 * divider / 60;\n                maxdelay = maxdelay + startFP * 1;\n                if( motime > 1380 && maxdelay < 59 ) {\n                    maxdelay = 24 * 60 + maxdelay * 1;\n                }\n                if( typeof(lcid) === \"undefined\" || lcid === \"\" ) {\n                    if( maxdelay < motime ) {\n                        var cancel = flow.get(\"cancel\",cancel) || \"\";\n                    }\n                }\n            }\n            list[i] = ( { point: point , ptime: ptime , atime: atime , train: train , via: via , des: des , track: track , notice: notice , delay: delay , cancel: cancel , remark: remark } );\n            i++;\n            }\n            //node.warn(list);\n        msg.payload = list;\n        return msg;\n    }","outputs":1,"noerr":0,"x":590,"y":160,"wires":[["b466f515.72cdf8"]]},{"id":"63a7ca51.127c94","type":"xml","z":"19ffebdd.dd58c4","name":"","property":"payload","attr":"","chr":"","x":410,"y":160,"wires":[["15a5d206.442dee"]]},{"id":"6b472e2.65eedd","type":"comment","z":"19ffebdd.dd58c4","name":"Templates Output","info":"","x":400,"y":240,"wires":[]},{"id":"b56fc9a1.431768","type":"comment","z":"19ffebdd.dd58c4","name":"Für Debug-Ausgabe","info":"","x":789.5,"y":35,"wires":[]},{"id":"548169cf.609528","type":"comment","z":"19ffebdd.dd58c4","name":"Connection to Broker","info":"Hier IP-Adresse und Port zum Broker eintragen.\nTopic: rocrail/service/info","x":107.5,"y":116,"wires":[]},{"id":"d0b61662.e0d7b8","type":"comment","z":"19ffebdd.dd58c4","name":"Variable decliration","info":"Am Anfang des Nodes sind zwei Variablen \nzu definieren:\narea = \"Ortschaft\" ; Hier ist die Ortschaft / der Bahnhof \neinzutragen, für den der Fahrplananzeiger gilt.","x":590,"y":100,"wires":[]},{"id":"85a3d203.a43b3","type":"http in","z":"19ffebdd.dd58c4","name":"get /HLJ","url":"/HLJ","method":"get","upload":false,"swaggerDoc":"","x":70,"y":280,"wires":[["cd71b3a5.63f2c"]]},{"id":"e7c9cf65.d0798","type":"http response","z":"19ffebdd.dd58c4","name":"HTML /HLJ","statusCode":"","headers":{},"x":810,"y":280,"wires":[]},{"id":"f820c134.9db9f","type":"template","z":"19ffebdd.dd58c4","name":"Template","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!doctype html>\n<html> \n  <head>\n      <style>\n              {{{payload.style}}}\n              \n            .smaller {\n                font-size:80%; \n                \n            }  \n      </style>\n    <meta charset=\"utf-8\">\n    <title>Heaton-Lodge-Junc</title>\n\n    <meta property=\"og:image\" content=\"https://www.rmweb.co.uk/community/uploads/profile/photo-25007.jpeg\">\n    <script type=\"text/javascript\">\n    var Loopval = 0;\n    var audionamesarray = [];\n    var audionamesarray1 = [];\n    var index = 0;\n    var FuncComplete = 1;\n     var minsmp31 = 0;\n     var minsmp32 = 0;\n    var EndMes = 0;\n    var ServiceType = 'Express';\n    var Platform = '2';\n   var val23 = 0;\n    var outputtingval = 0;\n    var PowerOn = 0;\n    var HrCompare;\n    var MinCompare;\n    var Compare = \"\";\n    var Newtime;\n    var d;\n    var n;\n    var j;\n  var Delaytimecut;\n  var delval;\n\n\n\n\n\n\n\n\n\n\n\n\n    //Audio Output\n     function processQ() {\n\n                             //Audio Module\n\n\n\n\n\n\n\n                        /* var audionameslist = \"Announce/Chime.mp3,Announce/Chime.mp3,Announce/1.wav\";\n                        var audionamesarray = audionameslist.split(','); */\n                        var audio = new Audio(audionamesarray1[0]);\n\n                        audio.src=audionamesarray1[index];\n                        index++;\n                        audio.play();\n                        FuncComplete = 0;\n\n                        audio.onended = function() {\n\n                        if(index < audionamesarray1.length){\n                         audio.src=audionamesarray1[index];\n\n                            audio.play();\n                            index++;\n                            console.log(index);\n\n                            console.log(\"FuncComplete:\" + FuncComplete);\n                        } else {\n                            console.log(\"Audio array queue finished\");\n                            FuncComplete = 1;\n                            console.log(index);\n                            console.log(audionamesarray1.length);\n                            if (0 >= 1) {console.log(\"HLJ\");}\n\n                            console.log(\"FuncComplete:\" + FuncComplete);\n                        }\n                        }\n\n                        }\n\n\n\n\n\n\n\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/HLJ\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"HLJ\",\"ws/HLJ\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                console.log(msg);\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                data = msg.data;\n                console.log(\"output\", data);\n                obj = JSON.parse(data);\n                console.log(obj);\n                var tag = Object.keys(obj);\n                if( tag == \"time\") {\n                   //get time\n\n                   obj = obj.time;\n\n                   time = obj.split(\":\");\n                   console.log(time);\n                  /* document.getElementById('time').innerHTML = time[0];\n                   document.getElementById('time1').innerHTML = time[1];\n                   document.getElementById('time2').innerHTML = time[2]; */\n\n                   document.getElementById('time').innerHTML = \"Time now \" + time[0] + \":\" + time[1] + \":\" + time[2];\n\n\n                }\n                if( tag == \"fault\") {\n                   //get fault\n                   obj = obj.fault;\n                   document.getElementById('fault').innerHTML = obj;\n                }\n                if(typeof(obj) == \"object\") {\n                    if(obj instanceof Array) {\n                    console.log(obj.length);\n                    var pointer = obj.length;\n                    var list = document.getElementById('list');\n                    if(list.hasChildNodes()) {\n                        Anzahl = document.getElementById(\"list\").childNodes.length;\n                        console.log(\"Liste\",list);\n                        console.log(Anzahl);\n                        for (var i = 0; i < Anzahl; i++) {\n                            list.removeChild(list.firstChild);\n                        }\n                    }\n                    var i = 0;\n                    while( i < pointer ) {\n\n                        /* Start ceate Row for Display */\n                        /* Hier beginnt die Erzeugung der Zeilen für die Anzeige */\n                        row = document.createElement(\"tr\"); //Zeile erzeugen\n                        cell = document.createElement(\"td\"); // Zelle erzeugen\n                        /* Hier wird der Punkt als svg erzeugt */\n                        if( obj[i].point == \"*\") {\n                        svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n                        circle.setAttribute('cx',\"7\"); // Position x\n                        circle.setAttribute('cy',\"7\"); // Position y\n                        circle.setAttribute('r',\"7\"); // Radius\n                        circle.setAttribute('fill',\"#00ff00\"); // Füllfarbe\n                        svg.appendChild(circle);\n                        svg.setAttribute('width', '14px');  //Breite svg\n                        svg.setAttribute('height', '14px');  // Höhe svg\n                        svg.setAttribute('viewBox', '0 0 14 14'); // sichtbare Größe svg\n                        cell.appendChild(svg);\n                        } else {\n                            text = document.createTextNode(\"\");\n                            cell.appendChild(text);\n                        }\n                        row.appendChild(cell);\n                        /* Ende Punkt erzeugen */\n                        cell = document.createElement(\"td\"); // Zelle erzeugen\n                        console.log(\"Ptime = \" + obj[i].ptime);\n                       var Ptime = obj[i].ptime.trim();\n\n\n                   \n\n\n\n                        if(!obj[i].cancel){\n\n                              d = new Date();\n                              n = d.getMinutes()+1;\n                              j = d.getHours();\n\n                          if (n == 60) {\n                                j = j + 1;\n                                n = \"00\";\n                            } else if (n > 60) {\n                                n = n - 60;\n\n                            }\n\n                            if(n < 10) {\n                                    n = \"0\" + n;\n                                }\n\n                                if(j < 10) {\n                                    j = \"0\" + j;\n                                }\n\n                          HrCompare = n;\n                          MinCompare = j;\n\n\n                        Compare = MinCompare + \":\" + HrCompare;\n\n\n\n                          Delaytimecut = obj[i].ptime.split(\":\");\n                          Delaytime13 = obj[i].ptime;\n\n\n                          console.log(Compare + \"|\" + Delaytime13);\n\n                          if (Compare == Delaytime13) {\n\n\n                              delval = 1;\n                              val23 = 1;\n                              console.log(\"Yes\" + val23);\n\n                              console.log(\"Read out Actual Train\");\n                              audionamesarray.push(\"Announce/Chime.mp3\");\n                             //audionamesarray.push(\"Announce/Attention.mp3\");\n                             audionamesarray.push(\"Announce/Platform.mp3\");\n                             audionamesarray.push(\"Announce/\" + Platform + \".mp3\");\n                             audionamesarray.push(\"Announce/For.mp3\");\n                             audionamesarray.push(\"Announce/\" + Delaytimecut[0] + \".mp3\");\n\n                              if(Delaytimecut[1] < 20){\n\n                                  minsmp3OnTime = \"Announce/\" + Delaytimecut[1] + \".mp3\";\n                                  console.log(minsmp3OnTime);\n                                  audionamesarray.push(minsmp3OnTime);\n\n                              } else {\n                                 Delayval666 = Delaytimecut[1].toString();\n                                 if (Delayval666.charAt(1) == 0) {\n\n                                     minsmp3133 = \"Announce/\" +  Delayval666.charAt(0) + \"0\" + \".mp3\";\n                                     audionamesarray.push(minsmp3133);\n                                    console.log(minsmp3133);\n\n                                 } else {\n\n                                     minsmp3133 = \"Announce/\" +  Delayval666.charAt(0) + \"0\" + \".mp3\";\n                                      minsmp3233 = \"Announce/\" +  Delayval666.charAt(1) + \".mp3\";\n                                      audionamesarray.push(minsmp3133);\n                                 audionamesarray.push(minsmp3233);\n                                 console.log(minsmp3133);\n                                 console.log(minsmp3233);\n\n                                 }\n\n\n                                // Finding the character at given index\n\n\n\n\n\n                                    //MinOutput(Delayval);\n\n\n                              }\n\n\n\n                             audionamesarray.push(\"Announce/\" + ServiceType + \".mp3\");\n                         audionamesarray.push(\"Announce/Service-to.mp3\");\n                         audionamesarray.push(\"Announce/\" + obj[i].des + \".mp3\");\n                         audionamesarray.push(\"Announce/Calling.mp3\");\n                         audionamesarray.push(\"Announce/dest.mp3\");\n                        audionamesarray.push(\"Announce/and.mp3\");\n                         audionamesarray.push(\"Announce/\" + obj[i].des + \".mp3\");\n                         audionamesarray.push(\"Announce/EndChime.mp3\");\n\n                          }\n\n                             /**/\n                          }\n\n\n\n\n\n\n                        if(Ptime == '') {\n                           // console.log(\"Up so late?\");\n                        } else {\n\n\n                            var Remark = obj[i].remark.split(\"*\");\n                            //console.log(Remark[0] + \"Here am i walking\" + Remark[1]);\n                            \n                         if ((Remark[0] == '0') && (obj[i].cancel)) {\n\n                             if(delval !== 1) {\n                                 EndMes = 1 ;\n\n                             audionamesarray.push(\"Announce/Chime.mp3\");\n                             //audionamesarray.push(\"Announce/Attention.mp3\");\n\n                             }\n                         }\n\n                          if (Remark[0] !== '0') {\n                              if(delval !== 1) {\n\n                             audionamesarray.push(\"Announce/Chime.mp3\");\n                             //audionamesarray.push(\"Announce/Attention.mp3\");\n\n                             EndMes = 1 ;\n                              }\n                            var res = obj[i].ptime.split(\":\");\n\n                            var integer = parseInt(Remark[0], 10);\n                            var mins = parseInt(res[1], 10);\n                            var hours = parseInt(res[0], 10);\n                          Delayval = mins - integer;\n                          console.log(\"Here i am\" + hours + \":\" + Delayval);\n\n                          if (obj[i].cancel) {\n\n                               Delayval = parseInt(Delayval, 10);\n\n                             EndMes = 1 ;\n                              console.log(\"We are here\");\n\n                               //Cancellled value created here\n\n                          if(Delayval < 0){\n                              Delayval = Delayval + 60;\n                              if(hours == 0){\n                                  hours = hours + 23;\n                              }\n                              hours = hours - 1;\n\n                              if(Delayval < 10){\n                                  Delayval = \"0\" + Delayval;\n\n                              }\n                          }\n\n\n                           if(Delayval < 10){\n                                  Delayval = \"0\" + Delayval;\n\n                              }\n\n\n\n                          if(hours<10){\n                                  hours = \"0\" + hours;\n\n                              }\n\n                              //Cancellled value created here\n                          }\n\n                          if(!obj[i].cancel) {\n\n                          if(Delayval < 0){\n                              Delayval = Delayval + 60;\n                              if(hours == 0){\n                                  hours = hours + 23;\n                              }\n                              hours = hours - 1;\n\n\n\n                              if(Delayval < 10){\n                                  Delayval = \"0\" + Delayval;\n                                 console.log(\"This is it\" + Delayval);\n                              }\n\n\n                          }\n\n\n\n                          if(hours<10){\n                                  hours = \"0\" + hours;\n\n                              }\n                                   hoursmp3 = \"Announce/\" + hours + \".mp3\";\n\n                                   if(delval !== 1) {\n\n                                   audionamesarray.push(\"Announce/The.mp3\");\n                              audionamesarray.push(hoursmp3);\n\n                                   }\n                          //console.log(hoursmp3);\n                           if(Delayval<10){\n                                  Delayval = \"0\" + Delayval;\n                                // console.log(\"This is it\" + Delayval);\n                              }\n                              if(Delayval<20){\n\n                                  minsmp3 = \"Announce/\" + Delayval + \".mp3\";\n                                  //console.log(minsmp3);\n                                  if(delval !== 1) {\n\n                                  audionamesarray.push(minsmp3);\n\n                                  }\n                              } else {\n                                 Delayval1 = Delayval.toString();\n                                 if (Delayval1.charAt(1) == 0) {\n                                     minsmp31 = \"Announce/\" +  Delayval1.charAt(0) + \"0\" + \".mp3\";\n                                    if(delval !== 1) {\n\n                                     audionamesarray.push(minsmp31);\n\n                                    }\n                                 } else {\n                                     minsmp31 = \"Announce/\" +  Delayval1.charAt(0) + \"0\" + \".mp3\";\n                                      minsmp32 = \"Announce/\" +  Delayval1.charAt(1) + \".mp3\";\n                                    if(delval !== 1) {\n\n                                      audionamesarray.push(minsmp31);\n                                 audionamesarray.push(minsmp32);\n\n                                    }\n                                 }\n\n\n                                // Finding the character at given index\n\n\n\n\n\n                                    //MinOutput(Delayval);\n\n                                 // console.log(minsmp31);\n                                 // console.log(minsmp32);\n                              }\n\n\n\n                          }\n\n\n\n\n\n\n\n                          Delaytime = hours + \":\" + Delayval;\n\n                          console.log(Compare + \"|\" + Delaytime);\n                          if (Compare == Delaytime) {\n                              val23 = 1;\n                              console.log(\"Yes\" + val23);\n                          }\n\n                          //console.log(\"Delaytime: \" + Delaytime);\n                            text = document.createTextNode(Delaytime); // Delayed time\n\n                        } else if (obj[i].ptime) {\n                          text = document.createTextNode(obj[i].ptime); // Actual time\n                        } else {\n                            text = document.createTextNode(\" \"); // wipe time\n                        }\n\n\n\n\n\n\n\n\n\n                        }\n\n                        cell.appendChild(text); // geplante Ankunftzeit setzen\n                        cell.setAttribute(\"class\",\"time\"); // class geplante Ankunftzeit setzen\n\n\n\n                        row.appendChild(cell); // Zelle an Zeile binden\n                        cell = document.createElement(\"td\"); // Zelle erzeugen\n                        myP = document.createElement(\"p\"); // Absatz erzeugen\n                        text = document.createTextNode(\"\"); // aktuelle Ankunftzeit setzen\n                        myP.appendChild(text); // aktuelle Ankunftzeit setzen\n                        myP.setAttribute(\"id\",\"atime\"); // class aktuelle Ankunftzeit setzen\n                        cell.appendChild(myP); // Absatz an Zelle binden\n                        myP = document.createElement(\"p\"); // Absatz erzeugen\n\n                        text1 = document.createTextNode(obj[i].cancel); //Ausfall setzen\n\n\n                       /* if(!obj[i].atime) {*/\n\n                        if ((!obj[i].cancel) && (Remark[0] == '0')) {\n                         text2 = document.createTextNode(\"On Time\");\n                         myP.appendChild(text2); //Ausfall setzen\n\n                          myP.setAttribute(\"id\",\"cancel\"); //Ausfall setzen\n                      } else if ((!obj[i].cancel) && (obj[i].remark[0])) {\n                           text3 = document.createTextNode(obj[i].ptime);\n                         myP.appendChild(text3); //Ausfall setzen\n\n\n\n                         if(delval !== 1) {\n\n                         //Service Type\n                         audionamesarray.push(\"Announce/\" + ServiceType + \".mp3\");\n                         audionamesarray.push(\"Announce/Service-to.mp3\");\n                         audionamesarray.push(\"Announce/\" + obj[i].des + \".mp3\");\n\n                         audionamesarray.push(\"Announce/Delay.mp3\");\n                         //console.log(\"Delay =\" + obj[i].remark[0]);\n                         audionamesarray.push(\"Announce/\" + Remark[0] + \".mp3\");\n\n                         }\n                         if (Remark[0] == 1) {\n                             if(delval !== 1) {\n\n                             audionamesarray.push(\"Announce/Minute.mp3\");\n\n                             }\n                         } else {\n                             if(delval !== 1) {\n\n                           audionamesarray.push(\"Announce/Minutes.mp3\");\n\n                             }\n                         }\n\n\n\n                          myP.setAttribute(\"id\",\"cancel\"); //Ausfall setzen\n\n\n                          //console.log(\"Why are you here\");\n                      }else{\n                           myP.appendChild(text1); //Ausfall setzen\n\n                          myP.setAttribute(\"id\",\"cancel\"); //Ausfall setzen\n\n\n\n\n\n\n\n                            audionamesarray.push(\"Announce/The.mp3\");\n\n\n                          if (Remark[0] == '0') {\n                              Outputtime = obj[i].ptime.split(\":\");\n\n                          } else {\n                             //Delete 1\n                             Outputtime1 = obj[i].ptime.split(\":\");\n\n                              Temptime = Delaytime.split(\":\");\n                              var Tempmin = parseInt(Temptime[1], 10);\n                              var Temphour = parseInt(Temptime[0], 10);\n                              if(Tempmin < 0) {\n                                  Tempmin = Tempmin + 60;\n                                  Temphour = Temphour - 1;\n\n                              }\n\n                              if (Temphour < 10) {\n                                  Temphour = Temphour + \"0\";\n                              }\n\n                              EndTime = Temphour + \":\" + Tempmin;\n\n\n                              Outputtime = EndTime.split(\":\");\n                              //console.log(\"Both:\" + Outputtime1 + \":\" + Outputtime);\n                          }\n\n\n\n                            var Cancelmin = parseInt(Outputtime[1], 10);\n                                var Cancelhour = parseInt(Outputtime[0], 10);\n\n                        // console.log(\"Ptime =\" + Cancelhour + \"and\" + Cancelmin);\n\n                         if (Cancelhour < 10) {\n                             Cancelhour = \"0\" + Cancelhour;\n                         }\n\n                          hoursmp321 = \"Announce/\" + Cancelhour + \".mp3\";\n\n                           audionamesarray.push(hoursmp321);\n                         // console.log(hoursmp321);\n\n\n                           if(Cancelmin<10){\n                                  Cancelmin = \"0\" + Cancelmin;\n\n                              }\n                              if(Cancelmin<20){\n                                  minsmp322 = \"Announce/\" + Cancelmin + \".mp3\";\n                                  //console.log(minsmp322);\n                                  audionamesarray.push(minsmp322);\n                              } else {\n\n\n                                 Cancelmin = Cancelmin.toString();\n\n                                 if (Cancelmin.charAt(1) == 0) {\n                                     minsmp311 = \"Announce/\" +  Cancelmin.charAt(0) + \"0\" + \".mp3\";\n                                     audionamesarray.push(minsmp311);\n                                 } else {\n                                     minsmp311 = \"Announce/\" +  Cancelmin.charAt(0) + \"0\" + \".mp3\";\n                                     audionamesarray.push(minsmp311);\n                                      minsmp322 = \"Announce/\" +  Cancelmin.charAt(1) + \".mp3\";\n                                 audionamesarray.push(minsmp322);\n                                 }\n\n                                // Finding the character at given index\n\n\n                                 // console.log(minsmp311);\n                                 // console.log(minsmp322);\n\n\n                              }\n\n\n\n\n\n                              audionamesarray.push(\"Announce/\" + ServiceType + \".mp3\");\n                         audionamesarray.push(\"Announce/Service-to.mp3\");\n                         audionamesarray.push(\"Announce/\" + obj[i].des + \".mp3\");\n\n\n\n                          audionamesarray.push(\"Announce/is.mp3\");\n                           audionamesarray.push(\"Announce/Cancelled.mp3\");\n                           audionamesarray.push(\"Announce/Please.mp3\");\n\n\n\n\n\n                        //  console.log(\"The cancel\" + Ptime);\n\n\n\n\n\n                      }\n                        /*} else {\n                           // console.log(obj[i].atime);\n                        }*/\n\n\n\n                        cell.appendChild(myP); // Absatz an Zelle binden\n                        cell.setAttribute(\"class\",\"time1\"); // class Absatz setzen\n                        row.appendChild(cell); // Zelle an Zeile binden\n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                        row.appendChild(cell); // Zelle an Zeile binden\n                        cell = document.createElement(\"td\"); // Zelle erzeugen\n                        text = document.createTextNode(obj[i].des); // Ziel setzen\n                        cell.appendChild(text); // Ziel setzen\n                        cell.setAttribute(\"class\",\"des\"); // calls Ziel setzen\n                        row.appendChild(cell); // Zelle an Zeile binden\n                        cell = document.createElement(\"td\"); // Zelle erzeugen\n                        text = document.createTextNode(obj[i].via); // via setzen\n                        cell.appendChild(text); // via setzen\n                        cell.setAttribute(\"class\",\"via\"); // class via setzen\n                        row.appendChild(cell); // Zelle an Zeile binden\n                        /*cell = document.createElement(\"td\"); // Zelle erzeugen*/\n                       /* text = document.createTextNode(obj[i].track); // Gleis setzen*/\n                        /*cell.appendChild(text); // Gleis setzen*/\n                       /* cell.setAttribute(\"class\",\"track\"); // calls Gleis setzen*/\n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                        cell = document.createElement(\"td\"); // Zeller erzeugen\n                        if(Ptime == '') {\n                           //  console.log(\"No Train\");\n                         }else{\n                         if (!Remark[1]) {\n                            console.log(\"empty\");\n                         } else {\n                        text = document.createTextNode(Remark[1]); // Zugnummer setzen\n                         }\n                         }\n\n                        cell.appendChild(text); // Zugnummer setzen\n                        cell.setAttribute(\"class\",\"train\"); // class Zugnummer setzen\n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                       \n                        row.appendChild(cell); // Zelle an Zeile binden\n                        cell = document.createElement(\"td\"); // Zelle erzeugen\n                        //text = document.createTextNode(); // Hinweis etzen\n                         var Train = obj[i].train.split(\"*\");\n                         if(Ptime == '') {\n                             console.log(\"No Train\");\n                         }else{\n                            console.log(Train[1]);\n                            console.log(Train);\n                         if (!Train[1]) {\n                         text = document.createTextNode(\"Awaiting Loco\"); // Hinweis etzen\n                         } else {\n                        text = document.createTextNode(Train[1]); // Hinweis etzen\n                         }\n                         }\n\n                        cell.appendChild(text); // Gleis setzen\n                        cell.setAttribute(\"class\",\"notice\"); // calls Gleis setzen\n                        row.appendChild(cell); // Zelle an Zeile binden\n\n\n                        myP = document.createElement(\"p\"); // Absatz erzeugen\n                       // text = document.createTextNode(obj[i].delay); // Verspätung erzeugen\n                        myP.appendChild(text); // Verspätung erzeugen\n                        myP.setAttribute(\"id\",\"delay\"); // class Verspätung setzen\n                        cell.appendChild(myP); // Absatz an Zelle binden\n                        cell.setAttribute(\"class\",\"notice\"); // class Zelle setzen\n                        row.appendChild(cell); // Zelle an Zeile binden\n                        row.setAttribute(\"id\",\"row\"); // id der Zeile setzen\n                        list.appendChild(row); // Zeile an Tabellen Body binden\n                        /* End generate*/\n                        /*Ende Erzeugung */\n\n\n                        if (EndMes == 1) {\n                        audionamesarray.push(\"Announce/EndChime.mp3\");\n                        EndMes = 0;\n                        }\n\n\n                        if(PowerOn == 1) {\n\n                        if((val23 == 1) || (obj[i].cancel))  {\n\n\n                            audionamesarray1 = audionamesarray1.concat(audionamesarray);\n                            audionamesarray = [];\n                            val23 = 0;\n                            delval = 0;\n                            console.log(audionamesarray);\n                            console.log(\"We are here\");\n                            outputtingval = 1;\n                        }\n\n                        val23 = 0;\n                        delval = 0;\n                        audionamesarray = [];\n\n                        if ((i == 9) && (FuncComplete === 1) && (outputtingval == 1)){\n                             console.log(\"here again\");\n                    processQ();\n                    outputtingval = 0;\n                        }\n                        }\n\n                        i++;\n                    }\n                    }\n                }\n            }\n\n            ws.onopen = function() {\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n\n\n\n        function startTime() {\n  var today = new Date();\n  var h = today.getHours();\n  var m = today.getMinutes();\n  var s = today.getSeconds();\n  m = checkTime(m);\n  s = checkTime(s);\n\n    if( h < 10 ) {\n        var h = \"0\" + h;\n    }\n    /*\n    document.getElementById('time').innerHTML = h;\n  document.getElementById('time1').innerHTML = m;\n  document.getElementById('time2').innerHTML = s; \n*/\n  document.getElementById('time').innerHTML = \"Time now \" + h + \":\" + m + \":\" + \"<span class='smaller'>\" + s + \"</span>\";\n\n  var t = setTimeout(startTime, 500);\n}\nfunction checkTime(i) {\n  if (i < 10) {i = \"0\" + i};  // add zero in front of numbers < 10\n  return i;\n}\n\n        var time = time.split(\":\");\n         document.getElementById('time').innerHTML = obj;\n\n\n\n\n\n\n\n\n\n\n\n\n    </script>\n</head>\n<body onload=\"wsConnect(); startTime();\" onunload=\"ws.disconnect();\" style=\"margin:0px!important;\">\n    \n        \n        \n    \n\n<iframe src=\"Announce/silent.mp3\" allow=\"autoplay\" loop=\"true\"id=\"audio\" style=\"display: none\"></iframe>\n\n\n\n<!-- Ab hier kann das Template angepasst werden -->\n<table class=\"head\">\n    <colgroup>\n    <col width=\"30\">\n    <col width=\"90\">\n    <col width=\"90\">\n    <col width=\"170\">\n    <col width=\"60\">\n\n    <tr class=\"trhead\">\n        <th class=\"head0\">\n\t\t<div class=\"skalierender-svg-container\" style=\"padding-bottom: 0%\">\n\n\t\t\t<!--<svg\n\t\t\t\txmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n\t\t\t\txmlns:cc=\"http://creativecommons.org/ns#\"\n\t\t\t\txmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n\t\t\t\txmlns:svg=\"http://www.w3.org/2000/svg\"\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\tid=\"svg870\"\n\t\t\t\tversion=\"1.1\"\n\t\t\t\tviewBox=\"0 0 8.4666659 8.4666668\"\n\t\t\t\theight=\"32\"\n\t\t\t\twidth=\"32\">\n\t\t\t\t<defs\n\t\t\t\tid=\"defs864\" />\n\t\t\t\t\t<metadata\n\t\t\t\t\tid=\"metadata867\">\n\t\t\t\t\t<rdf:RDF>\n\t\t\t\t\t<cc:Work\n\t\t\t\t\trdf:about=\"\">\n\t\t\t\t\t<dc:format>image/svg+xml</dc:format>\n\t\t\t\t\t<dc:type\n\t\t\t\t\trdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n\t\t\t\t\t<dc:title></dc:title>\n\t\t\t\t</cc:Work>\n\t\t\t\t</rdf:RDF>\n\t\t\t\t</metadata>\n\t\t\t\t<g\n\t\t\t\ttransform=\"translate(0,-288.53333)\"\n\t\t\t\tid=\"layer1\">\n\t\t\t\t<path\n\t\t\t\tid=\"path1441\"\n\t\t\t\td=\"m 2.5516227,296.71425 c 0.924391,-0.008 2.43703,-0.008 3.36142,0 0.924391,0.008 0.168071,0.0138 -1.68071,0.0138 -1.848781,0 -2.605101,-0.006 -1.68071,-0.0138 z m -1.91173807,-0.11503 -0.117564,-0.10255 0.149397,0.0875 c 0.196627,0.11514 0.199552,0.11763 0.138313,0.11763 -0.02892,0 -0.105485,-0.0462 -0.170146,-0.10256 z m 6.98291707,0.0875 c 0.01141,-0.008 0.08798,-0.0544 0.170146,-0.10256 l 0.149397,-0.0875 -0.117564,0.10255 c -0.06466,0.0564 -0.141227,0.10256 -0.170147,0.10256 -0.02892,0 -0.04324,-0.007 -0.03183,-0.0151 z m -6.81459307,-0.23367 c -0.08927,-0.0544 -0.206832,-0.17199 -0.261258,-0.26125 -0.09608,-0.15759 -0.09896,-0.257 -0.09896,-3.42413 0,-3.16712 0.0029,-3.26653 0.09896,-3.42412 0.05443,-0.0893 0.171992,-0.20683 0.261258,-0.26126 0.15758903,-0.0961 0.25699807,-0.099 3.42412407,-0.099 3.167126,0 3.266534,0.003 3.424124,0.099 0.08926,0.0544 0.206831,0.17199 0.261257,0.26126 0.09608,0.15759 0.09896,0.257 0.09896,3.42412 0,3.16713 -0.0029,3.26654 -0.09896,3.42413 -0.05443,0.0893 -0.171992,0.20683 -0.261257,0.26125 -0.15759,0.0961 -0.256998,0.099 -3.424124,0.099 -3.167126,0 -3.26653504,-0.003 -3.42412407,-0.099 z m 6.83760607,-0.2719 0.122234,-0.12223 v -3.29125 -3.29125 l -0.122234,-0.12223 -0.122233,-0.12223 H 4.2323327 0.94108366 l -0.12223403,0.12223 -0.122233,0.12223 v 3.29125 3.29125 l 0.122233,0.12223 0.12223403,0.12224 h 3.29124904 3.291249 z m -6.501009,-1.09783 c 0,-0.17338 0.0012,-0.1743 0.224095,-0.1743 0.206864,0 0.224095,-0.01 0.224095,-0.12668 0,-0.1254 0.0036,-0.12653 0.361041,-0.11204 0.3313,0.0134 0.362352,0.0239 0.376955,0.12667 0.01534,0.10802 0.03459,0.11205 0.535337,0.11205 h 0.519424 v -0.1245 -0.12449 h 1.967053 1.967053 v 0.11669 c 0,0.1161 -0.004,0.11686 -0.784331,0.14868 -0.810861,0.0331 -1.497693,0.12396 -1.929704,0.25538 -0.200617,0.061 -0.561028,0.0759 -1.855006,0.0763 l -1.606012,5.7e-4 z m 1.344568,-0.57269 c -1.029691,-0.0278 -1.114617,-0.0533 -1.270494,-0.38184 -0.07116,-0.14997 -0.0808,-0.30263 -0.06344,-1.00551 0.01835,-0.74305 0.0346,-0.86987 0.157303,-1.22709 0.07526,-0.21911 0.197122,-0.52164 0.270797,-0.67228 l 0.133954,-0.2739 0.585137,-0.014 c 0.622141,-0.0149 0.658812,-0.0329 0.507415,-0.24906 -0.110613,-0.15793 -0.333019,-0.25979 -0.567191,-0.25979 -0.146061,0 -0.201668,-0.0206 -0.201668,-0.0747 0,-0.0639 0.143863,-0.0747 0.995977,-0.0747 0.852113,0 0.995976,0.0108 0.995976,0.0747 0,0.0541 -0.05561,0.0747 -0.201668,0.0747 -0.234173,0 -0.456578,0.10186 -0.567191,0.25979 -0.145929,0.20834 -0.106578,0.23819 0.313954,0.23819 0.490838,0 0.586109,0.0662 0.849703,0.5904 0.529559,1.0531 1.334423,1.70044 2.443723,1.96543 l 0.4482,0.10707 v 0.46019 0.46018 l -1.954603,0.0136 c -1.075032,0.007 -2.369178,0.002 -2.875882,-0.0113 z m 4.730888,-0.62249 c 0,-0.19089 -0.01476,-0.22409 -0.0996,-0.22409 -0.08228,0 -0.0996,0.0332 -0.0996,0.1909 0,0.20415 0.02743,0.25729 0.132797,0.25729 0.0455,0 0.0664,-0.0706 0.0664,-0.2241 z m -0.298793,-0.044 c 0,-0.19329 -0.01425,-0.22101 -0.124497,-0.24209 -0.118987,-0.0227 -0.124497,-0.0131 -0.124497,0.21829 0,0.22503 0.0088,0.24209 0.124497,0.24209 0.113862,0 0.124497,-0.0187 0.124497,-0.21829 z m -0.398391,-0.0805 c 0,-0.13695 -0.01681,-0.2493 -0.03735,-0.24968 -0.02054,-4.2e-4 -0.08777,-0.0142 -0.149396,-0.0307 -0.105355,-0.0282 -0.112047,-0.015 -0.112047,0.22112 0,0.19732 0.01868,0.25603 0.08715,0.27392 0.19786,0.0517 0.211645,0.0377 0.211645,-0.21466 z m -0.448189,-0.11651 c 0,-0.23661 -0.01397,-0.27226 -0.12684,-0.32369 -0.208598,-0.095 -0.22761,-0.0747 -0.211787,0.22651 0.01511,0.28761 0.04587,0.32417 0.301278,0.35812 0.02054,0.003 0.03735,-0.11469 0.037349,-0.26094 z m -0.549895,-0.21963 c -0.0021,-0.32814 -0.0062,-0.33876 -0.174296,-0.4459 l -0.172188,-0.10976 v 0.37106 c 0,0.37091 6.5e-5,0.37108 0.161847,0.44183 0.08901,0.0389 0.167448,0.0726 0.174295,0.0748 0.0068,0.002 0.0115,-0.14721 0.01034,-0.33208 z m -3.643165,0.0772 c 0.139685,-0.13968 0.03445,-0.38843 -0.164336,-0.38843 -0.133484,0 -0.224095,0.0906 -0.224095,0.2241 0,0.13348 0.09061,0.22409 0.224095,0.22409 0.05752,0 0.131468,-0.0269 0.164336,-0.0598 z m 1.955485,-0.0461 c 0.08968,-0.16758 -0.01372,-0.3423 -0.202567,-0.3423 -0.111154,0 -0.165881,0.0315 -0.205386,0.1182 -0.07899,0.17336 0.0185,0.32999 0.205386,0.32999 0.09782,0 0.164568,-0.0349 0.202567,-0.10589 z m 1.092202,-0.40689 v -0.41318 l -0.199195,-0.19451 -0.199195,-0.19451 v 0.30195 c 0,0.54734 0.04919,0.76025 0.193803,0.83885 0.07144,0.0388 0.146696,0.0715 0.167238,0.0726 0.02054,10e-4 0.03735,-0.18394 0.03735,-0.41119 z m -0.873248,-0.94883 c 0.08818,-0.0645 0.08524,-0.0834 -0.07135,-0.46064 -0.08982,-0.21636 -0.188549,-0.40986 -0.219394,-0.42998 -0.03085,-0.0201 -0.484721,-0.0369 -1.008612,-0.0374 -0.702437,-5.6e-4 -0.965904,0.0156 -1.003466,0.0615 -0.07572,0.0925 -0.309851,0.68854 -0.309851,0.78877 0,0.0478 0.02801,0.0982 0.06225,0.11198 0.03424,0.0138 0.601395,0.0269 1.260353,0.029 0.9323,0.003 1.218506,-0.011 1.290068,-0.0633 z m -0.884452,-1.50352 0.109754,-0.17219 h -0.244408 -0.244409 l 0.109755,0.17219 c 0.06036,0.0947 0.120959,0.17218 0.134654,0.17218 0.01369,0 0.07429,-0.0775 0.134654,-0.17218 z m -2.80448907,5.72741 c -0.04543,-0.0693 -0.07353,-0.13511 -0.06246,-0.14618 0.01107,-0.0111 0.05788,0.0456 0.104027,0.12605 0.102768,0.17907 0.07225,0.19384 -0.04157,0.0201 z m 7.68148707,0.002 c 0.115138,-0.19663 0.117625,-0.19956 0.117625,-0.13832 0,0.0289 -0.04615,0.10549 -0.102553,0.17015 l -0.102553,0.11756 z m -7.77685707,-3.56062 c 0,-1.84878 0.0062,-2.6051 0.0138,-1.68071 0.0076,0.92439 0.0076,2.43703 0,3.36142 -0.0076,0.92439 -0.0138,0.16807 -0.0138,-1.68071 z m 7.91801207,0 c 0,-1.84878 0.0062,-2.6051 0.0138,-1.68071 0.0076,0.92439 0.0076,2.43703 0,3.36142 -0.0076,0.92439 -0.0138,0.16807 -0.0138,-1.68071 z m -7.89174307,-3.4223 c 0,-0.0289 0.04615,-0.10548 0.102554,-0.17015 l 0.102553,-0.11756 -0.08748,0.1494 c -0.115138,0.19662 -0.117625,0.19955 -0.117627,0.13831 z m 7.75544707,-0.12618 -0.08787,-0.16153 0.100317,0.11756 c 0.08536,0.10004 0.130985,0.20691 0.08787,0.20582 -0.0068,-1.4e-4 -0.05199,-0.073 -0.100317,-0.16185 z M 0.63988463,288.9366 c 0.06466,-0.0564 0.141226,-0.10255 0.170146,-0.10255 0.06124,0 0.05831,0.002 -0.138313,0.11762 l -0.149397,0.0875 z m 7.10326407,-0.006 c -0.08217,-0.0526 -0.123867,-0.0958 -0.09266,-0.096 0.0312,-1.4e-4 0.109635,0.0438 0.174296,0.0977 0.148054,0.12334 0.112442,0.12259 -0.08163,-0.002 z m -5.191526,-0.13354 c 0.924391,-0.008 2.43703,-0.008 3.36142,0 0.924391,0.008 0.168071,0.0138 -1.68071,0.0138 -1.848781,0 -2.605101,-0.006 -1.68071,-0.0138 z\"\n\t\t\t\tstyle=\"fill:#ffffff;fill-opacity:1;stroke-width:0.04979881\" />\n\t\t\t\t</g>\n\t\t\t</svg>-->\n\t\t</div>\n\t\t<th class=\"head1\">\n           Passing Report\n       </th>\n        <th class=\"head3\">\n\n        <th class=\"head2 cent\" id=\"\">\n           Heaton Lodge Junction\n        </th>\n        <th class=\"head4\">\n<div class=\"skalierender-svg-container\">\n\t<img id=\"myBtn\"  src=\"/Img/5069df94df7d6fbbb329f2a233a2c1df.png\" alt=\"BR-Logo\" style=\"height:15%; border-radius: 0px 0px 0px 25px; margin-left: 82px;\">\n\t\t\t<!--\n\t<svg xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"744.09448\" height=\"526.5354\" class=\"skalierendes-svg\" viewBox=\"0 0 745 527\" id=\"svg2367\">\n\t\t<defs id=\"defs2369\"/>\n\t\t<g transform=\"translate(-593.32638,-244.47955)\" id=\"layer1\">\n\t\t<g transform=\"matrix(2.8072397,0,0,2.8072397,-1054.5664,-1311.3148)\" id=\"g2504\">\n\t\t<path d=\"M 829.65558,723.91382 L 607.93512,723.91382 L 607.93512,572.06531 L 829.65558,572.06531 L 829.65558,723.91382 z \" style=\"fill:#ffffff;fill-rule:nonzero;stroke:none\" id=\"path94\"/>\n\t\t<path d=\"M 628.05363,591.26554 L 672.46452,591.26554 C 700.1795,591.26554 716.45792,609.13001 716.45792,647.69737 C 716.45792,688.76906 699.42822,705.21447 672.46452,705.21447 L 628.05363,705.21447 L 628.05363,591.26554 z M 728.89635,591.26554 L 778.56638,591.26554 C 799.35267,591.26554 809.78756,603.78737 809.78756,618.22924 C 809.78756,637.17898 798.68479,643.60689 790.08654,645.44344 L 790.08654,645.94432 C 802.94226,647.61387 814.54582,656.71311 814.54582,674.16029 C 814.46242,692.94303 800.85532,705.21447 775.47767,705.21447 L 728.89635,705.21447 L 728.89635,591.26554 z M 655.51822,609.13001 L 665.28523,609.13001 C 681.06286,609.13001 689.41072,620.48318 689.41072,647.19649 C 689.41072,677.83328 679.6437,687.01601 665.78612,687.01601 L 655.51822,687.01601 L 655.51822,609.13001 z M 756.11055,608.96311 L 766.62884,608.96311 C 777.39772,608.96311 781.82209,614.97354 781.82209,621.98583 C 781.82209,630.50068 777.23072,636.4277 766.46194,636.4277 L 756.11055,636.4277 L 756.11055,608.96311 z M 756.11055,657.88187 L 769.04977,657.88187 C 781.82209,657.88187 785.24469,664.05929 785.24469,672.15675 C 785.24469,681.58987 778.39939,687.01601 769.21676,687.01601 L 756.11055,687.01601 L 756.11055,657.88187 z M 619.12139,560.54524 L 819.88856,560.54524 C 834.16344,560.54524 845.767,572.06531 845.767,586.34028 L 845.767,709.55535 C 845.767,723.83032 834.16344,735.43388 819.88856,735.43388 L 619.12139,735.43388 C 604.84642,735.43388 593.32635,723.83032 593.32635,709.55535 L 593.32635,586.34028 C 593.32635,572.06531 604.84642,560.54524 619.12139,560.54524 z M 619.45528,578.15932 L 819.63807,578.15932 C 824.06244,578.15932 827.65204,581.74892 827.65204,586.17329 L 827.65204,709.72234 C 827.65204,714.14671 824.06244,717.7363 819.63807,717.7363 L 619.45528,717.7363 C 615.03091,717.7363 611.44132,714.14671 611.44132,709.72234 L 611.44132,586.17329 C 611.44132,581.74892 615.03091,578.15932 619.45528,578.15932\" style=\"fill:#ec1b2d;fill-rule:evenodd;stroke:none\" id=\"path96\"/>\n\t\t</g>\n\t\t</g>\n\t</svg> -->\n</div>\n        </th>\n    </tr>\n</table>\n<table class=\"head borderbox\">\n        <colgroup>\n    \n     <col width=\"10\">\n    <col width=\"20\">\n    <col width=\"40\">\n    <col width=\"60\">\n    <col width=\"60\">\n    <col width=\"20\">\n <col width=\"40\">\n  </colgroup>\n\n    <tr class=\"trhead trhead1\">\n        <th class=\"it\">\n        </th>\n        <th class=\"it cent\">Time</th>\n        <th class=\"it cent\">Estimated</th>\n        <th class=\"it\">To</th>\n        <th class=\"it\">From</th>\n        <th class=\"it cent\">Train</th>\n        <!--<th class=\"it cent\">Running Line</th>-->\n        <th class=\"it cent\">Motive Power\n        </th>\n    </tr>\n</table>\n<table class=\"list borderbox\">\n    <colgroup>\n     \n     <col width=\"10\">\n    <col width=\"20\">\n    <col width=\"40\">\n    <col width=\"60\">\n    <col width=\"60\">\n    <col width=\"20\">\n <col width=\"40\">\n\n  </colgroup>\n<tbody id=\"list\"></tbody>\n</table>\n<!--<table class=\"foot\">\n    <tr class=\"foot\">\n        <td class=\"foot\" id=\"fault\">\n          {{ fault }}\n        </td>\n    </tr>\n</table>\n-->\n<div class=\"Row\">\n    <p class=\"Timebox\" id=\"time\">{{ time }}</p>\n</div>\n\n    <!--\n   <div class=\"Row\">\n    <div class=\"Column head3 hour\" id=\"time\">{{ time }}</div>\n     <div class=\"head3 ddot\" id=\":\">:</div>\n    <div class=\"Column head3 min\" id=\"time1\">{{ time1 }}</div>\n    <div class=\"head3 dot\" id=\":\">.</div>\n    <div class=\"Column head3 sec\" id=\"time2\">{{ time2 }}</div>\n</div>\n-->\n    \n\n</body>\n<script>\nfunction pwr() {\n    var audio1 = new Audio;\n    audionamesarray1.length = 0;\n    audionamesarray.length = 0;\n    index = 0;\n    if(PowerOn == 1) {\n        PowerOn = 0;\n        PowerSound = \"Announce/Timetableoff.mp3\";\n        console.log(\"Powered Off\");\n        console.log(audionamesarray1);\n    }else{\n        PowerSound = \"Announce/Timetable.mp3\";\n        console.log(audionamesarray1);\n        console.log(\"Powered On\");\n        PowerOn = 1;\n    }\n       audio1.src=PowerSound;\n\n                        audio1.play();\n\n    }\n\n        document.getElementById(\"myBtn\").addEventListener(\"click\", pwr);  </script>\n</html>\n","output":"str","x":600,"y":280,"wires":[["e7c9cf65.d0798"]]},{"id":"cd71b3a5.63f2c","type":"template","z":"19ffebdd.dd58c4","name":"Stylesheet","field":"payload.style","fieldType":"msg","format":"html","syntax":"mustache","template":".Timebox {\nheight: 11.6vh;\nfont-size: 2.8em !important;\nbackground-color:#102877;\n}\n\n\n.trhead1 {\nbackground-color:#102877;\n}\n\n/*\n.borderbox {\n    border-color: #6d6969 !important;\n    border-style: solid !important;\n    border-width: thick !important; \n}\n\n\n\n.Row {\n    display: table;\n    width: 60%; /*Optional*/\n    table-layout: auto; /*Optional*/\n    border-spacing: 0px; /*Optional*/\n    margin: auto;\n    border-style: solid;\nborder-width: 20px;\nborder-color: red;\nbackground-color: black;\n}\n\n.hour {\nwidth:20%;\ncolor: yellow;\nfont-size: 18.0em !important;\n}\n.min {\nwidth:20%;\ncolor: yellow;\nfont-size: 18.0em !important;\n}\n.sec {\nfont-size: 10em !important;\nwidth:20%;\ncolor: darkred;\n}\n.ddot {\nwidth: fit-content;\n    margin: auto;\n    color: yellow;\n    font-size: 18.0em !important;\n}\n.dot {\nwidth: fit-content;\n    margin: auto;\n    color: yellow;\n    font-size: 18.0em !important;\n}\n\n.Column {\n    display: table-cell;\n    /*background-color: darkred; Optional*/\n}*/\n\n\n\n\n\n.borderbox {\n    border-color: #6d6969 !important;\n    border-style: solid !important;\n    border-width: thick !important; \n}\n.Row {\n    display: table;\n    width: 100%;\n    table-layout: auto;\n    border-spacing: 0px;\n    margin: auto;\n    \n    \n    \n    background-color: blue;\n}\n}\n\np#atime {\n  font-family: 'ds-digitalnormal';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 2.0em;\n    text-align: left;\n    color: var(--fontcolor)\n    padding-left: 4.4%;\n}\n\n\n#delay {\n  font-family: 'P22-Johnston';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 2.8em !important;\n    text-align: center;\n    color: var(--fontcolor)\n    padding-left: 4.4%;\n}\n\n\n\n.hour {\nwidth:20%;\ncolor: yellow;\n}\n.min {\nwidth:20%;\ncolor: yellow;\n}\n.sec {\nfont-size: 12em !important;\nwidth:20%;\ncolor: darkred;\n}\n.ddot {\nwidth: fit-content;\n    margin: auto;\n    color: yellow;\n}\n.dot {\nwidth: fit-content;\n    margin: auto;\n    color: yellow;\n}\n\n.Column {\n    display: table-cell;\n    /*background-color: darkred; Optional*/\n}\n\n.time {\nfont-family: 'P22-Johnston';\n}\n\n:root {\n/* Hier sind die Farben für die Ausgabe definiert\nEs können jeweils Hintergrund- und Schriftfarbe angepasst werden */\n    /*Hintergrundfarbe */\n    --background: #272727;\n    /*Schriftfarbe */\n    --fontcolor: #fff;\n    /* Schriftart */\n    --fontart: arial;\n    //color: #fff;\n    /* Hintergrundfarbe ungerade Zeile Liste */\n    --backgroundfirst: #272727;\n    /* Schriftfarbe ungerade Zeile */\n    --fontfirst: #fff;\n    /* Hintergrundfarbe gerade Zeile */\n    --backgroundsec: #c5c5c5;\n    /* Schriftfarbe gerade Zeile */\n    --fontsec: #000;\n    /* Hintergrundfarbe Störung (fault) */\n    --backgroundfault: #b91212;\n    /* Schriftfarbe Störung (fault) */\n    --fontfault: #ffc107;\n}\n\n@font-face {\n    font-family: 'ds-digitalnormal';\n    src: url('/Font/ds-digi-webfont.woff2') format('woff2'),\n         url('/Font/ds-digi-webfont.woff') format('woff');\n    font-weight: normal;\n    font-style: bold;\n\n}\n\n@font-face {\n    font-family: 'P22-Johnston';\n    src: url('/Font/P22 Johnston Underground Regular.ttf') format('ttf');\n    font-weight: normal;\n    font-style: normal;\n\n}\n\ntrhead1 { \nbackground-color: #444444;\n}\n\nbody {\n    /* definiert die Schriftgröße zum gesamten Seitenverhältnis */\n    font-size: 1em;\n    background-color: var(--background);\n    color: var(--fontcolor);\n    padding:0 0 0 0;\n}\n\n/* Abfahrt */\n.head1 {font-family: 'ds-digitalnormal';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 3.5em;\n    src: url('Font\\ds-digi-webfont.woff2') format('woff2'),\n         url('Font\\ds-digi-webfont.woff') format('woff');\n         }\n/* Depart*/\n.head2 {font-family: 'ds-digitalnormal';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 4.5em;}\n/* Uhr */\n.head3 {font-family: 'ds-digitalnormal';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 20.0em; text-align: center\n    \n    }\n/* Logo */\n.head4 {font-family: 'ds-digitalnormal';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 2.0em;\n    text-align: left;\n    color: var(--fontcolor)\n    padding-left: 4.4%;}\n.it {font-family: 'ds-digitalnormal';\n    font-weight: normal;\n    font-style: normal;\n    font-size: 2.4em; text-align: left;\n    background-color:#102877;}\n/* Hintergrundfarbe der Zellen im Kopf und am Fuss */\ntd.head {background-color: var(--background)}\ntd.foot {background-color: var(--background)}\n\n\n.cent {text-align: center;}\n\n\n\n\ntable.head {\n    table-layout:fixed;\n    overflow: hidden;\n\twidth: 100%;\n\theight: 50%;\n\tfont-family: var(--fontart);\n\tborder: 0px;\n\tborder-color: #fff;\n\tborder-spacing: 0;\n\tmargin:0;\n    padding: 0;\n}\ntable.list {\n    table-layout:fixed;\n    overflow: hidden;\n\twidth: 100%;\n\theight: 100%;\n\tfont-family: var(--fontart);\n\tborder: 0px;\n\tborder-spacing: 0;\n\tmargin:0;\n    padding: 0;\n}\np {\npadding: 0;\nmargin: 0;\n\n    font-weight: normal;\n    font-style: normal;\n    text-align:center;\nfont-size:2.4em !important;\n\n}\ntable.foot {\n    table-layout:fixed;\n    overflow: hidden;\n    background-color: var(--background);\n\twidth: 100%;\n\theight: 100%;\n\tfont-family: var(--fontart);\n\tborder: 0px;\n\tborder-spacing: 0;\n\tmargin:0;\n    padding: 0;\n}\n\ndiv.run {\n    background-color: var(--backgroundfault);\n    white-space: nowrap;\n    overflow: hidden;\n}\nspan.fault2 {\n    /*display:block;*/\n    margin-left:100%;\n    font-size: 2em;\n    color: var(--fontfault);\n    padding: 0px;\n    /*height: 2em;*/\n    /*width: 100%;*/\n    -webkit-animation: textrun 25s linear infinite;\n    animation: textrun 25s linear infinite;\n    }\n    @-webkit-keyframes textrun {\n    0% {  transform: translate(0%, 0);}\n    100% { margin-left:-100%;transform: translate(-100%, 0);}\n    }\n \n    @keyframes textrun {\n    0% { transform: translate(0, 0);}\n    100% { margin-left:-100%; transform: translate(-100%, 0); }\n    }\nspan.fault1 {\n    font-size: 2em;\n    color: var(--fontfault);\n    background-color: var(--backgroundfault);    \n    padding: 0px;\n    /*height: 2em;*/\n    /*width: 100%;*/\n}\n      th {\n        background-color: var(--background); \n        color: var(--fontcolor);\n      \tfont-size: 1.3em;\n      \ttext-align: left;\n      \tmargin:0;\n      \tpadding: 0 0 0 0;\n      \theight: 1.5em;\n        /*border-bottom: 0px solid #ffffff;*/\n            height: fit-content;\n      }\n      /* Hintergrundfarbe Standard einer Zeile */\n      tr {\n        background-color: var(--background);\n        color: var(--fontcolor);\n        /* Zeilenhöhe */\n        height : 2em;\n      }\n      /* Hintergrundfarbe der ungeraden Zeilen */\n      tr:nth-child(even) {\n        background-color: var(--backgroundfirst);\n        color: var(--fontfirst);\n        /* Zeilenhöhe */\n        height : 2em;\n      }\n      /* Hintergrundfarbe der geraden Zeilen */\n      tr:nth-child(odd) {\n        background-color: var(--backgroundsec);\n        color: var(--fontsec);\n        /* Zeilenhöhe */\n        height : 2em;\n      }\n/* Formatierung der einzelnen Zellen / Felder der Liste */\n.point {font-family: 'P22-Johnston';\n    font-weight: 1000;\n    font-style: normal;\n    color: --fontcolor; text-align: center; position: absolut;}\n.time {font-family: 'P22-Johnston';\n    font-weight: 1000;\n    font-style: normal;\n    text-align: center; font-size: 2.6em}\n.train {font-family: 'P22-Johnston';\n    text-align: center;\n    font-weight: 1000;\n    font-style: normal;\n    padding-left: 10px; font-size: 2.4em}\n.des {font-family: 'P22-Johnston';\n    font-weight: 1000;\n    font-style: normal;\n    text-align: left; font-size: 2.4em; height: 2em}\n.via {font-family: 'P22-Johnston';\n    font-weight: 1000;\n    font-style: normal;\n    padding-left: 10px;\n    font-size: 2.4em;}\n.track {font-family: 'P22-Johnston';\n    font-weight: 1000;\n    font-style: normal;\n    padding-left: 10px; text-align: center; font-size: 2.24em}\n.notice {font-family: 'P22-Johnston';\n    font-weight: 1000;\n    font-style: normal;\n    padding-left: 10px;\n    text-align: center;\n    <!--font-size: 2.24em;-->}\n#cancel {font-family: 'P22-Johnston';\n    font-weight: 1000;\n    font-style: normal;\n    text-align: center;\n    font-size: 2.6em !important;}\n#cancel::first-line {font-style: normal}\n\n/* Important ! NO changes in follow */\n\ndiv.skalierender-svg-container {\n display: table-cell;\n position: relative; \n width: 100px;\n padding-bottom: 0%; /*override this inline for aspect ratio other than square */\n}\n.skalierendes-svg {\n position: absolute; \n height: 100%; \n width: 100%; \n left: 0; \n top: 0;\n}","output":"str","x":450,"y":280,"wires":[["f820c134.9db9f"]]},{"id":"f384c38d.b7d24","type":"websocket in","z":"19ffebdd.dd58c4","name":"","server":"c242ad7b.e0a8a","client":"","x":80.5,"y":217,"wires":[[]]},{"id":"b466f515.72cdf8","type":"websocket out","z":"19ffebdd.dd58c4","name":"","server":"c242ad7b.e0a8a","client":"","x":790,"y":160,"wires":[]}]